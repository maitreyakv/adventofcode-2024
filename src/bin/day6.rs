use std::collections::HashSet;

fn main() {
    println!("{}", part_1(INPUT));
    println!("{}", part_2(INPUT));
}

fn part_1(input: &str) -> usize {
    MapBuilder::from(input)
        .build()
        .run()
        .unwrap()
        .guard
        .previous
        .into_iter()
        .map(|(position, _)| position)
        .collect::<HashSet<_>>()
        .len()
}

fn part_2(input: &str) -> usize {
    let map = MapBuilder::from(input).build();
    let n_threads: usize = std::thread::available_parallelism().unwrap().into();

    let handles = (0..n_threads)
        .map(|thread_idx| {
            let map = map.clone();
            std::thread::spawn(move || {
                map.empty_positions()
                    .skip(thread_idx)
                    .step_by(n_threads)
                    .filter(|empty_position| {
                        let mut map = map.clone();
                        map.obstacles.insert(*empty_position);
                        map.run().is_err()
                    })
                    .count()
            })
        })
        .collect::<Vec<_>>();

    handles
        .into_iter()
        .map(|handle| handle.join().unwrap())
        .sum()
}

#[derive(Clone, Debug)]
struct Map {
    guard: Guard,
    obstacles: HashSet<Position>,
    bounds: Position,
}

impl Map {
    fn empty_positions(&self) -> impl Iterator<Item = Position> {
        (0..=self.bounds.0).flat_map(|i| (0..=self.bounds.1).map(move |j| (i, j)))
    }

    fn run(mut self) -> Result<Self, Loop> {
        while self.guard.in_bounds(&self.bounds) {
            let next = self.guard.direction.step(&self.guard.position);
            if self.obstacles.contains(&next) {
                self.guard.direction = self.guard.direction.turn_right();
            } else {
                self.guard
                    .previous
                    .insert((self.guard.position, self.guard.direction.clone()));
                self.guard.position = next;
            }

            if self
                .guard
                .previous
                .contains(&(self.guard.position, self.guard.direction.clone()))
            {
                return Err(Loop);
            }
        }

        Ok(self)
    }
}

#[derive(Debug)]
struct Loop;

struct MapBuilder {
    guard: Option<Guard>,
    obstacles: HashSet<Position>,
    bounds: Position,
}

impl MapBuilder {
    fn build(self) -> Map {
        Map {
            guard: self.guard.unwrap(),
            obstacles: self.obstacles,
            bounds: self.bounds,
        }
    }

    fn add_obstacle(&mut self, position: Position) {
        self.obstacles.insert(position);
        self.bounds.0 = std::cmp::max(self.bounds.0, position.0);
        self.bounds.1 = std::cmp::max(self.bounds.1, position.1);
    }

    fn add_guard(&mut self, position: Position, direction: Direction) {
        self.guard = Some(Guard {
            position,
            direction,
            previous: HashSet::new(),
        })
    }
}

impl From<&str> for MapBuilder {
    fn from(input: &str) -> Self {
        let builder = MapBuilder {
            guard: None,
            obstacles: HashSet::new(),
            bounds: (0, 0),
        };
        input
            .lines()
            .enumerate()
            .flat_map(|(i, line)| line.chars().enumerate().map(move |(j, c)| (i, j, c)))
            .fold(builder, |mut builder, (i, j, c)| {
                match c {
                    '#' => builder.add_obstacle((i as isize, j as isize)),
                    '^' => builder.add_guard((i as isize, j as isize), Direction::Up),
                    '>' => builder.add_guard((i as isize, j as isize), Direction::Right),
                    'v' => builder.add_guard((i as isize, j as isize), Direction::Down),
                    '<' => builder.add_guard((i as isize, j as isize), Direction::Left),
                    _ => {}
                };
                builder
            })
    }
}

#[derive(Clone, Debug)]
struct Guard {
    position: Position,
    direction: Direction,
    previous: HashSet<(Position, Direction)>,
}

impl Guard {
    fn in_bounds(&self, bounds: &Position) -> bool {
        self.position.0.le(&bounds.0)
            && self.position.1.le(&bounds.1)
            && self.position.0.ge(&0)
            && self.position.1.ge(&1)
    }
}

type Position = (isize, isize);

#[derive(Clone, Debug, Hash, PartialEq, Eq)]
enum Direction {
    Up,
    Down,
    Right,
    Left,
}

impl Direction {
    fn turn_right(&self) -> Self {
        match self {
            Self::Up => Self::Right,
            Self::Right => Self::Down,
            Self::Down => Self::Left,
            Self::Left => Self::Up,
        }
    }

    fn step(&self, from: &Position) -> Position {
        match self {
            Self::Up => (from.0 - 1, from.1),
            Self::Right => (from.0, from.1 + 1),
            Self::Down => (from.0 + 1, from.1),
            Self::Left => (from.0, from.1 - 1),
        }
    }
}

#[cfg(test)]
mod test {
    use super::*;

    #[test]
    fn test_part_1() {
        assert_eq!(part_1(INPUT), 4374)
    }

    #[test]
    fn test_part_2() {
        assert_eq!(part_2(INPUT), 1705)
    }
}

#[allow(clippy::items_after_test_module)]
const INPUT: &str = r#"......#........#..........#.................##......................#.............#..................#............#............#..
.....#............................................#.......................#.......##.................#..#...................#.#...
......#...................#............................#.....#.........#................................................#.........
...........................................#.......#..........#..#......#.........#.#.#.#................#.##........##...........
........#.........................................#.......#.....#..........#...#....##....#..#.......##................#......#...
...................#..#.....................................................#.................................................#...
....#..................#..........#........#.............#................................................................#.......
......#..............#..................#...........#......#.....#...........................#..#.#.....................#.....#...
......#...#...............................................#.....#.........................#..........#............................
......#......#..........................................#..................................#....#..#................#..##...#.....
........................................................................................#.........................................
................#..........#..........................#.##......................#..........#......................................
.............#.............................#......#..............................#....................#...........#.....#...#.....
.......#.................#..................#..........................#...........................................#..............
.......#.....................................................#..........................................#....#.#.....#......#.....
...#......#............#........#......................#...........................#.#....#..#....................#.............##
...........................##..#..#..........#....................#................................................#......#.......
.....................#...#.......................#...#..#.....#................#...........................................#....#.
.................#................#.............#...#...........................................................#..#.#............
#.....................#....................##.......#...................#..........#..........................#...................
.#..........##......#...#......#................#.....................................#.#.....#..............#....................
...#...#..#..........................................................#..#..#......................................................
..................#.#..............#...#...............................#...#....#.#.........#.........................##..........
.......#.........................#..............................................#........#....#....#.........#....................
...........#......#......#...........#........#.............................##.................................................#..
............................#...................................#......#........................................#.................
......................................##...........................................#.............#..#...........#...#.....#.......
...................................................#.................................#............................................
..........................#..........................................#..#.....#.................#.#......#........................
..................#...........#.............................#....#.#..................#................................#..........
...................#....#..#.........................................................#....#.......................................
..#..........................................................##..................................#......................#....#.#..
#.........................#.....#...............................#........................#................#.......................
......................#......#...#..........#......#..............................#...#......#.................................#..
...............#.....#............................................................................#...............................
#.....................#........#.#........................................................#.......................#.............#.
.......#...#..........#........#...........#.................#..................#....................................##.....#.....
.#......#..................................#.......................................................................#..............
.................#.....#...........................................................#..............................................
.........#....................................^......#..................#..............................#..#.............#...#.....
.............................................................#.....#....................................#.........................
....................#.................#........#........................................................#..#............#........#
.....#..........................................................#...........................#.................#....##.............
..............#.........#.................#............................#.............#......................#.#............#......
.............#.................#.........................................#...#................#.............#.....#...............
....#.....##..#......#........#............................................#..........#.......#.................................##
..........................................................................#.......................................................
.......#..........#.............................................................................................##..#.............
............................#...............#...............................................................................#.....
....#......#...............................................................................................................#......
..................................#......................#.....#............................................#.....#........#......
...............................#..........................................#.......................................................
.....#.............#...#..............#.#............#....................................................................#.......
..............................................#...............................#......##.......#................#..........#.#.....
........#.....##...............................................#.........................#........................................
.....#.........................#.#........#.............................................#.............#..............##...........
........................................#..##.........................#............#...........#.............#....................
.....................#.#................#............................#.................#.....#..............................#.....
................#.....................................#..#....................#..................................#................
...........#...................#.................#..........................................................#.......#...........#.
...........................#..................................#......#..............#............#.........#....#................#
..................................................................................................................#...............
..............#....#.#............................................................................#.....#.........#........#......
..#...........#.................#.#......#................................#..........................#...........................#
............#...........##...............................#..................................................#.....................
..............##.#..................................................................................#.........#......#......#.....
................................................................#...............#....#....##................#.....................
.........#..#.....................#........................................................#......#................#..............
...#..........#..........#..................#.......................#........................#...#................#.........#.....
...................................#..#...............................#..........#................................................
.........................#........................................................................................................
......................#.........#....................................................##............................#.....#........
.#....#.....................#.........................................................#....#........#.............................
..........................................#....................................#........................................#.........
.................................................#.......................................#........................................
#..#...............#......................#....#.............................................#................#........##.........
.........#....#........##.........#.....#.........#...............................................#..................#....#...#...
..#............................................................................#...............................................#..
.......................................................#.........#......#..........................#.#............................
.........#.............#.................##.....#.....#.........#............#.........#..................#.....#.............#...
#..........#.........#...............................................................................................#............
.......................#....................#..................................................#..................................
.#................#.................................#........................................#...........#........................
.........#........................................................................................................................
..................................................................................#..........#.....................#..............
..#...............................#.......#.....................#......................#.....#..........................#.........
......#....#..........................................................#..........................#................................
...........................................##..................................................##..................#...#..........
...............#....#...........................#........................................#..............#....................##...
#......#......................................................#..........#.........................#.........#....................
...#...................................#......#..........................................#.........................#.............#
#.....#.........#.............#.......................................#...............................#...........................
...................#.#..........................................................................#...............#.................
.......#......##..........#....................................................#..................#..........#....................
.............................................#.##..............#......................#......#..#..................#..........#...
..##...................#...................................#.........................................#...........#................
...................................................#.....................................#.......................#...............#
..........#.......##...................#...............#...............................................................#..........
.......................#............#............##.............................................#......##.................#...#...
.........#.................................................................................#............#....................#....
.......##.........#..................................................................#................#...........................
................#.............................................................................................#...................
......................#.......#....#.................................................#......#.#...............................#...
.........#.........#.#.....##.#..................................##...................................................#...........
.#......................................................#.......#......##........#..........#.........#....#......................
........#.#......................#................................................................................................
..................#.............................#.................#..................#......................#......##.#...........
................##.............................................#....#..........##.#.#....#........................................
..............#...................#.......#............................#.#.....................................................#..
............#..............................................#....#.....................#...#.......................#.....#......#..
..............#........................................................#............................................#.............
.......#.....#.........#..............#..............................#.......................#..#................#....#..#........
.......................#......#........................................#.................#..........#.............................
...........#..................#.............................#............................................................#........
......#....#......#.....................#.....................#........#.....................#...#.....#.#...................#....
#..............................................##...#.....#...........#..........................................#................
..........#..........#.#........................................#..#....#.........................................................
..................#......................................#...#.......#............................................................
...#.............................#..................................................#...........#.................................
................................##.#.............#........................#...#...............................................#...
...#...................................#.......................#........................#............#...............#....#.#.....
..............................................................##.......#...............#.........#..................#.............
....#............................#..................................#..#..#...............#..............##.......................
#...#.................##...............................#...........#...........#..............#.#.........#........#...#..........
..........................#.....#....................#..............#.............#..........#....................#.........#.....
......#.......................................................#........#.....#..........................#...#.........#...........
...............................#............#.....#...........................#...............#........#..........................
............#..#......#...#..#.....................#...............#.........#...........................................#.....#..
.......#..#..................#............#...........#..............................................................#............
....#......#.##..#......##..........#.......#............#...............#....#....................................#..........#.#."#;
